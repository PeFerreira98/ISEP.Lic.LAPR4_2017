/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr4.green.s2.core.n1140618.richComments.ui;

import javax.swing.JOptionPane;
import lapr4.green.s2.core.n1140618.richComments.CommentNew;
import lapr4.green.s2.core.n1140618.richComments.controller.CommentController;
import lapr4.white.s1.core.n1234567.comments.CommentableCell;

/**
 *
 * @author Tiago
 */
public class MakeNewVersionEditUI extends javax.swing.JFrame {

    /**
     * The comment selected of comment list
     */
    private CommentNew commentList;

    /**
     * The comment selected of history list
     */
    private CommentNew historyList;

    /**
     * The controller of the use case
     */
    private transient CommentController controller;
    /**
     * Cell that contains the comment.
     */
    private CommentableCell cell;

    /**
     * Create an instance of MakeNewVersionEditUI
     *
     * @param controller the controller of the use case - Comment Controller
     * @param commentList The comment selected of comment list
     * @param cell cell that contains the comment
     * @param historyList the comment selected of history list
     */
    public MakeNewVersionEditUI(CommentController controller, CommentNew commentList, CommentableCell cell, CommentNew historyList) {
        this.controller = controller;
        this.cell = cell;
        this.commentList = commentList;
        this.historyList = historyList;
        this.cell = cell;
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
        fillTexts();
    }

    public void fillTexts() {
        if (historyList == null) {
            jTextField1.setText(commentList.getContent());
        }
        if (historyList != null) {
            jTextField1.setText(historyList.getContent());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Comment:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Green", "Blue", "Red", "Yellow", "Orange", "Maroon", "Lime", "Aqua" }));

        jButton1.setText("Edit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plain", "Bold", "Italic" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4", "6", "8", "9", "10", "12", "14", "16", "18", "20", "22", "24", "28", "32", "36", "40", "48", "64" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String color = jComboBox1.getModel().getElementAt(jComboBox1.getSelectedIndex()).toString();
        String content = jTextField1.getText();
        String author = System.getProperty("user.name");
        String size = jComboBox3.getModel().getElementAt(jComboBox3.getSelectedIndex()).toString();
        if (content == null || content.trim().isEmpty() || author == null || author.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The insert data is not valid! Enter new data.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String style = jComboBox2.getModel().getElementAt(jComboBox2.getSelectedIndex()).toString();
            if(style.equals("Bold")){
                style = "B";
            }else if(style.equals("Italic")){
                style = "i";
            }else{
                style= "plain";
            }
            this.controller.editComment(cell, commentList, content, author, color, style, size);
        }
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
