/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr4.blue.s1.lang.n1140956.ConditionalFormatting.ui;

import com.sun.glass.events.KeyEvent;
import csheets.core.Cell;
import csheets.ui.ctrl.UIController;
import java.util.SortedSet;
import javax.swing.JOptionPane;
import lapr4.blue.s1.lang.n1140956.ConditionalFormatting.CondFormattingController;

/**
 *
 * @author Marcos
 */
public class CondFormDialog extends javax.swing.JFrame {

    /**
     * Instance of uiController
     */
    private final UIController uiController;

    /**
     * Crontroller to formating cells UC
     */
    private final CondFormattingController controller;

    private SortedSet<Cell> array;

    /**
     * Creates new form CondFormDialog
     */
    public CondFormDialog(UIController uiCtrl) {
        initComponents();
        controller = new CondFormattingController(uiCtrl);

        this.uiController = uiCtrl;

        setTitle("Conditional Formatting");
        setVisible(true);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtValue = new javax.swing.JTextField();
        btnTrue = new javax.swing.JButton();
        btnFalse = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbOperators = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValueActionPerformed(evt);
            }
        });
        txtValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValueKeyTyped(evt);
            }
        });

        btnTrue.setText("o");
        btnTrue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrueActionPerformed(evt);
            }
        });

        btnFalse.setText("o");
        btnFalse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFalseActionPerformed(evt);
            }
        });

        btnOK.setText("Confirm");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        jLabel2.setText("Settings when expression is true:");

        jLabel3.setText("Settings when expression is false:");

        cmbOperators.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">", "<", "<=", ">=", "=", "<>" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(cmbOperators, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnOK)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnTrue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnFalse))))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbOperators, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnTrue))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFalse)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(btnOK)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValueActionPerformed

    }//GEN-LAST:event_txtValueActionPerformed

    private void btnTrueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrueActionPerformed
        new FormattingCells(this.uiController, controller, "true");
    }//GEN-LAST:event_btnTrueActionPerformed

    private void btnFalseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFalseActionPerformed
        new FormattingCells(this.uiController, controller, "false");
    }//GEN-LAST:event_btnFalseActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        if (controller.getFalseBackColor() == null && controller.getFalseFont() == null || controller.getTrueBackColor() == null && controller.getTrueFont() == null) {
            JOptionPane.showMessageDialog(CondFormDialog.this, "You have to select format options", "Conditional Formating", JOptionPane.INFORMATION_MESSAGE);

        } else if (!txtValue.getText().isEmpty()) {
            Cell cell = uiController.getActiveCell();
            /* TODO: sprint 2, setting a range of cells
            array = controller.getCells("A1", "C6");
            for(Cell cellAux:array){
                System.out.println(cellAux.getAddress()+"-");
            }
             */

            controller.addListener(txtValue.getText(), cmbOperators.getSelectedItem().toString(), cell);
            dispose();

        } else {
            JOptionPane.showMessageDialog(CondFormDialog.this, "You have to insert a formula ", "Conditional Formating", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnOKActionPerformed

    private void txtValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValueKeyTyped
        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACKSPACE) || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtValueKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFalse;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnTrue;
    private javax.swing.JComboBox<String> cmbOperators;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables
}
